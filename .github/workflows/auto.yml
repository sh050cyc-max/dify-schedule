name: Auto

on:
  schedule:
    # 既定（原作者設定）: 北京時間 06:30 → UTC 22:30
    - cron: "30 22 * * *"
    # 追加: JST=UTC+9
    # 72h: 毎週火曜 09:10 JST → UTC 00:10 火
    - cron: "10 0 * * 2"
    # 24h: 毎日 09:15 JST → UTC 00:15 毎日
    - cron: "15 0 * * *"
    # 8h: JST 09:20 / 17:30 / 23:30 → UTC 00:20 / 08:30 / 14:30
    - cron: "20 0 * * *"
    - cron: "30 8 * * *"
    - cron: "30 14 * * *"
    # 4h: JST 09:25 / 13:00 / 17:00 / 21:00 / 01:00 / 05:00
    #  → UTC 00:25 / 04:00 / 08:00 / 12:00 / 16:00 / 20:00
    - cron: "25 0 * * *"
    - cron: "0 4,8,12,16,20 * * *"
  workflow_dispatch:

env:
  # ── 原リポジトリが読む環境変数（変更不要）
  DIFY_TOKENS: ${{ secrets.DIFY_TOKENS }}
  DIFY_BASE_URL: ${{ secrets.DIFY_BASE_URL }}
  DIFY_INPUTS: ${{ secrets.DIFY_INPUTS }}
  EMAIL_USER: ${{ secrets.EMAIL_USER }}
  EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
  EMAIL_TO: ${{ secrets.EMAIL_TO }}
  DINGDING_WEBHOOK: ${{ secrets.DINGDING_WEBHOOK }}
  PUSHPLUS_TOKEN: ${{ secrets.PUSHPLUS_TOKEN }}
  WEIXIN_WEBHOOK: ${{ secrets.WEIXIN_WEBHOOK }}
  SERVERPUSHKEY: ${{ secrets.SERVERPUSHKEY }}
  FEISHU_WEBHOOK: ${{ secrets.FEISHU_WEBHOOK }}
  AIBOTK_KEY: ${{ secrets.AIBOTK_KEY }}
  AIBOTK_ROOM_RECIVER: ${{ secrets.AIBOTK_ROOM_RECIVER }}
  AIBOTK_CONTACT_RECIVER: ${{ secrets.AIBOTK_CONTACT_RECIVER }}

jobs:
  DifyWorkflow:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Ensure jq
        run: |
          if ! command -v jq >/dev/null 2>&1; then
            sudo apt-get update -y
            sudo apt-get install -y jq
          fi

      # ▼▼ 追加ステップ：発火した cron に応じて horizon を決め、
      #   USDJPY / GBPUSD を順に実行（password も注入） ▼▼
      - name: Prepare and run (inject DIFY_INPUTS per schedule)
        env:
          SCHEDULE: ${{ github.event.schedule }}
          PASSWORD: ${{ secrets.WORKFLOW_PASSWORD }}
        run: |
          set -euo pipefail
          echo "Triggered by schedule: '${SCHEDULE}'"

          # どの cron で来たかを horizon にマッピング
          H=""
          case "$SCHEDULE" in
            "10 0 * * 2") H="72" ;;                                # Tue 00:10 UTC (JST Tue 09:10)
            "15 0 * * *") H="24" ;;                                # Daily 00:15 UTC (JST 09:15)
            "20 0 * * *"|"30 8 * * *"|"30 14 * * *") H="8" ;;      # JST 09:20 / 17:30 / 23:30
            "25 0 * * *"|"0 4,8,12,16,20 * * *") H="4" ;;          # JST 09:25 / 13/17/21/01/05:00
            *) H="" ;;
          esac

          if [ -n "$H" ]; then
            for P in USDJPY GBPUSD; do
              # ★ API仕様通りに inputs をラップして 400 を回避
              export DIFY_INPUTS=$(jq -nc --arg p "$P" --argjson h "$H" --arg pwd "$PASSWORD" \
                '{inputs:{pair:$p,horizon_hours:$h,password:$pwd,comment:("auto by dify-schedule ("+($h|tostring)+"h)")},response_mode:"blocking",user:"github-cron"}')
              echo "Running pair=$P horizon=$H"
              yarn
              yarn workflowDify
            done
            exit 0
          fi

          # Hが空（既定枠/手動実行）の場合は、既存の env.DIFY_INPUTS をそのまま使用
          echo "No horizon override. Use env DIFY_INPUTS once."
          yarn
          yarn workflowDify
